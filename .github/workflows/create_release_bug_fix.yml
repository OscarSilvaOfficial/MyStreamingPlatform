name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get version from package.json
      run: echo "::set-output name=version::$(jq -r '.version' package.json)"

    - name: Create Release
      run: |
        npm install @octokit/rest
        node << EOF
        const { Octokit } = require("@octokit/rest");
        const { version } = process.env;

        const octokit = new Octokit({ auth: "${{ secrets.GITHUB_TOKEN }}" });
        const GITHUB_REPOSITORY = "${{ env.GITHUB_REPOSITORY }}" || process.env.GITHUB_REPOSITORY

        async function createRelease() {
          const { data } = await octokit.repos.createRelease({
            owner: "${{github.repository_owner}}",
            repo: decodeURIComponent(GITHUB_REPOSITORY),
            tag_name: "v" + version,
            name: "Release v" + version,
          });
          console.log(data);
        }

        createRelease();
        EOF
